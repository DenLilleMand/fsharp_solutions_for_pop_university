
// general hints for exercise 3i1 (^o^)Ôºè

// 3i1a) hint :
let mulTable n =
   let table = "     1   2   3   4   5   6   7   8   9  10\n" +
               " 1   1   2   3   4   5   6   7   8   9  10\n" +
               " 2   2   4   6   8  10  12  14  16  18  20\n" +
               " 3   3   6   9  12  15  18  21  24  27  30\n" +
               " 4   4   8  12  16  20  24  28  32  36  40\n" +
               " 5   5  10  15  20  25  30  35  40  45  50\n" +
               " 6   6  12  18  24  30  36  42  48  54  60\n" +
               " 7   7  14  21  28  35  42  49  56  63  70\n" +
               " 8   8  16  24  32  40  48  56  64  72  80\n" +
               " 9   9  18  27  36  45  54  63  72  81  90\n" +
               "10  10  20  30  40  50  60  70  80  90 100\n"
               table.[..(* some sneaky number here {^o^} *)]

// 3i1.b) hint :
let loopMultable n =
  let mutable s = "       1   2   3   4   5   6   7   8   9  10\n"
  for i = 1 to n do
    s <- s + // what to do here ?
    for j = 1 to 10 do
      s <- s + // what to do here ?
    s <- s + "\n"
  s

// 3i1.c) hint :
let rec recMulTable n =
  let rec row i j =
    if i = 0 then ""
    else // what to do here ?
  if n = 0 then "    " + row 10 1 + "\n"
  else // what to do here ?

// 3i1.d) hint:
let compare n T1 T2 T3 = printf "test%d: %b\n" n (T1 n = T2 n && T1 n = T3 n)
for i = 1 to 10 do
  compare i mulTable loopMultable recMulTable
